TEST TASK

Create a simple Rails API-only app and integrate GraphQL into it. Implement a simple CRUD for model `Contract` using needed operations (queries and mutations).

`Contract` has following attributes:
- status (postgres enum)
- name (string)
- start_date (date)
- avg_monthly_price (decimal, precision: 8, scale: 2)

Validation requirements:
- status: required, allowed values: draft & signed
- name: required, unique, maximum 255 characters
- start_date: required, only today or future dates are allowed
- avg_monthly_price: not required

Requirements:
- use form object pattern for validations
- use service object pattern for business logic
- use input object for GraphQL mutation arguments (when you send attributes for creating and updating object)
- use Rubocop
- add documentation to GraphQL when you create new type (query, mutation, enum, input object)
- test your API calls and add unit tests

Sub tasks
1. planning. - 10 minutes.
2. generate project; add rspec; add rubocop; add simplecov; configurations; clean project; - 15 minutes.
3. create migrations. - 30 minutes. Problems with postgresql and enum types.
4. researching.
    4.1 GraphQL.
    4.2 form object pattern.
    4.3 service object pattern.
5. write rpsec tests.
6. implementation.
7. refactoring.
8. Release(push to github or Heroku)

Timing
11:50 - 12:20 = 0.30
12:50 - 13:05 = 0.15
15:05 - 17:50 = 2.45
17:50 - 18:15 = 0.25
19:00 - 19:30 = 0.30
09:30 - 10:00 = 0.30
13:50 - 15:10 = 1.20
18:00 - 19:00 = 1.00
10:30 - 12:00 = 1.30
17:25 - 17:40 = 0.15
total = 9.00 hours